using System;
using System.Globalization;
using System.Linq;

class Program
{
    static void Main()
    {
        Console.OutputEncoding = System.Text.Encoding.UTF8; 

        // === Завдання 1 ===
        Console.WriteLine("Завдання 1. Замінити 0 на 1 і 1 на 0 з позиції:");
        Console.Write("Введіть рядок з 0 і 1: ");
        string binaryString = Console.ReadLine();

        Console.Write("З якої позиції почати заміну (0-based index): ");
        int position = int.Parse(Console.ReadLine());

        string result = ReplaceBits(binaryString, position);
        Console.WriteLine("Результат: " + result);

        // === Завдання 2 ===
        Console.WriteLine("\nЗавдання 2. Підрахунок днів до дати:");
        Console.Write("Введіть цільову дату (у форматі рррр-мм-дд): ");
        DateTime targetDate;
        if (DateTime.TryParse(Console.ReadLine(), out targetDate))
        {
            int days = (targetDate - DateTime.Today).Days;
            if (days > 0)
                Console.WriteLine($"До цієї дати залишилось {days} днів.");
            else if (days == 0)
                Console.WriteLine("Це сьогодні!");
            else
                Console.WriteLine("Ця дата вже минула.");
        }
        else
        {
            Console.WriteLine("Невірний формат дати.");
        }

        // === Завдання 3 ===
        Console.WriteLine("\nЗавдання 3. Обробка 3 дат:");
        Console.Write("Введіть 3 дати через кому (формат: dd.MM.yyyy,dd.MM.yyyy,...): ");
        string input = Console.ReadLine();
        string[] dateParts = input.Split(',');

        if (dateParts.Length != 3)
        {
            Console.WriteLine("Треба ввести рівно 3 дати.");
            return;
        }

        DateTime[] dates = new DateTime[3];
        bool allParsed = true;
        for (int i = 0; i < 3; i++)
        {
            if (!DateTime.TryParseExact(dateParts[i].Trim(), "dd.MM.yyyy", CultureInfo.InvariantCulture, DateTimeStyles.None, out dates[i]))
            {
                allParsed = false;
                break;
            }
        }

        if (!allParsed)
        {
            Console.WriteLine("Помилка у форматі дат. Використовуйте dd.MM.yyyy");
            return;
        }

        // a) рік з найменшим номером
        int minYear = dates.Min(d => d.Year);
        Console.WriteLine($"a) Найменший рік: {minYear}");

        // b) весняні дати (березень, квітень, травень)
        Console.WriteLine("b) Весняні дати:");
        foreach (var d in dates)
        {
            if (d.Month >= 3 && d.Month <= 5)
            {
                Console.WriteLine(d.ToString("dd.MM.yyyy"));
            }
        }

        // c) найпізніша дата
        DateTime latest = dates.Max();
        Console.WriteLine("c) Найпізніша дата: " + latest.ToString("dd.MM.yyyy"));
    }

    static string ReplaceBits(string input, int startPos)
    {
        if (startPos < 0 || startPos >= input.Length)
        {
            return input;
        }

        char[] chars = input.ToCharArray();
        for (int i = startPos; i < chars.Length; i++)
        {
            if (chars[i] == '0') chars[i] = '1';
            else if (chars[i] == '1') chars[i] = '0';
        }
        return new string(chars);
    }
}
